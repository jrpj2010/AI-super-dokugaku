import { type NextRequest, NextResponse } from "next/server"
import JSZip from 'jszip'

interface ChapterData {
  sho: number
  chapter: number
  title: string
  start: string
  end: string
}

export async function POST(request: NextRequest) {
  try {
    const { chapters } = await request.json() as { chapters: ChapterData[] }
    
    if (!chapters || !Array.isArray(chapters) || chapters.length === 0) {
      return NextResponse.json(
        { error: 'チャプターデータが必要です' },
        { status: 400 }
      )
    }

    // ZIPファイルを生成
    const zip = new JSZip()

    // jet_split.shスクリプトの生成
    const shellScript = generateJetSplitScript(chapters)
    zip.file("jet_split.sh", shellScript)

    // cuts.txtファイルの生成
    const cutsContent = chapters
      .map((c) => `${c.sho}_${String(c.chapter).padStart(3, "0")}_${slugify(c.title)}.mp4,${c.start},${c.end}`)
      .join("\n")
    zip.file("cuts.txt", cutsContent)

    // 章チャプター一覧の生成（UTF-8 BOM付きCSV）
    const BOM = '\ufeff'
    const chapterList = chapters.map((c) => `${c.sho},${c.chapter},${c.title},${c.start},${c.end}`).join("\n")
    zip.file("chapters.csv", BOM + "章,チャプター,タイトル,開始時間,終了時間\n" + chapterList)

    // READMEファイルの生成
    zip.file("README.md", generateReadme(chapters.length))

    // ZIPファイルをバッファとして生成
    const zipBuffer = await zip.generateAsync({ type: 'nodebuffer' })

    return new NextResponse(zipBuffer, {
      headers: {
        "Content-Type": "application/zip",
        "Content-Disposition": 'attachment; filename="jet_split_batch.zip"',
      },
    })
  } catch (error) {
    console.error('Batch ZIP generation error:', error)
    return NextResponse.json(
      { error: "バッチZIPファイルの生成に失敗しました" },
      { status: 500 }
    )
  }
}

function generateJetSplitScript(chapters: ChapterData[]) {
  const script = `#!/bin/bash

# ジェットスプリット - 動画自動分割スクリプト
# 使用方法: ./jet_split.sh 動画ファイル名.mp4

if [ $# -eq 0 ]; then
    echo "使用方法: ./jet_split.sh 動画ファイル名.mp4"
    exit 1
fi

IN="$1"

if [ ! -f "$IN" ]; then
    echo "エラー: ファイル '$IN' が見つかりません"
    exit 1
fi

echo "🚀 ジェットスプリット - 動画分割を開始します"
echo "📹 入力ファイル: $IN"
echo "📊 分割数: ${chapters.length}個のチャプター"
echo ""

${chapters
  .map((c, index) => {
    const filename = `${c.sho}_${String(c.chapter).padStart(3, "0")}_${slugify(c.title)}.mp4`
    return `echo "[${index + 1}/${chapters.length}] 📝 ${filename} を作成中..."
ffmpeg -y -i "$IN" -ss ${c.start} -to ${c.end} -c copy "${filename}"
echo "✅ ${filename} 完了"`
  })
  .join("\n\n")}

echo ""
echo "🎉 分割完了！${chapters.length}個のファイルが作成されました。"
echo ""
echo "📁 作成されたファイル:"
${chapters
  .map((c) => {
    const filename = `${c.sho}_${String(c.chapter).padStart(3, "0")}_${slugify(c.title)}.mp4`
    return `echo "   ${c.sho}章-${c.chapter}: ${filename}"`
  })
  .join("\n")}
echo ""
echo "🎬 動画分割が完了しました！各チャプターをご活用ください。"
`
  return script
}

function slugify(text: string) {
  return text
    .toLowerCase()
    .replace(/[^\w\s-]/g, "")
    .replace(/[\s_-]+/g, "-")
    .replace(/^-+|-+$/g, "")
}

function generateReadme(chapterCount: number) {
  return `# 🚀 ジェットスプリット - 動画分割バッチ

このバッチファイルは、セミナー動画を${chapterCount}個のチャプターに自動分割します。

## 📋 使用方法

1. このZIPファイルを動画ファイルと同じフォルダに解凍してください
2. ターミナル（コマンドプロンプト）を開き、解凍したフォルダに移動してください
3. 以下のコマンドを実行してください：

\`\`\`bash
# スクリプトに実行権限を付与
chmod +x jet_split.sh

# 動画を分割
./jet_split.sh 動画ファイル名.mp4
\`\`\`

## 🛠 必要な環境

- **FFmpeg** 4.x以上がインストールされていること
- **macOS** または **Linux** 環境

### FFmpegのインストール方法

**macOS (Homebrew使用):**
\`\`\`bash
brew install ffmpeg
\`\`\`

**Ubuntu/Debian:**
\`\`\`bash
sudo apt update
sudo apt install ffmpeg
\`\`\`

## ⚡ 特徴

- **無劣化分割**: FFmpegの\`-c copy\`オプションで画質劣化なし
- **自動命名**: {章}_{チャプター番号}_{タイトル}.mp4 形式
- **高速処理**: 90分動画を1分以内で分割完了

## 📁 ファイル説明

| ファイル名 | 説明 |
|-----------|------|
| \`jet_split.sh\` | 分割実行スクリプト |
| \`cuts.txt\` | 分割情報ファイル（タイムコード一覧） |
| \`chapters.csv\` | 章・チャプター一覧（Excel/Numbers対応） |
| \`README.md\` | このファイル |

## ⚠️ 注意事項

- 分割処理には動画の長さに応じて時間がかかる場合があります
- 元の動画ファイルは変更されません
- 分割されたファイルは同じフォルダに保存されます
- ファイル名に日本語が含まれる場合、自動的に英数字に変換されます

## 💡 トラブルシューティング

**「command not found: ffmpeg」エラーが出る場合:**
→ FFmpegがインストールされていません。上記のインストール方法を参照してください。

**「Permission denied」エラーが出る場合:**
→ \`chmod +x jet_split.sh\`を実行してスクリプトに実行権限を付与してください。

**分割されたファイルが再生できない場合:**
→ 元の動画ファイルが破損している可能性があります。別の動画で試してください。

---
Generated by ジェットスプリット v1.0
`
}
