export interface Channel {
  id: string;
  name: string;
  thumbnailUrl?: string;
}

export interface VideoThumbnails {
  default: { url: string; width: number; height: number };
  medium: { url: string; width: number; height: number };
  high: { url: string; width: number; height: number };
}

export interface Video {
  id: string;
  title: string;
  description: string;
  thumbnailUrl: string; // Using a single URL for simplicity, derived from thumbnails
  thumbnails?: VideoThumbnails; // Optional full thumbnail data
  channelId: string;
  channelTitle: string;
  channel?: Channel; // Optional: full channel object if fetched
  publishDate: string; // ISO string
  viewCount: string; // Formatted string e.g., "1.2M views"
  duration: string; // Formatted string e.g., "PT1M35S" from API, or formatted "1:35"
  videoUrl: string;
}

export interface SubtitleLine {
  id: string;
  startTime: number; // in seconds
  endTime: number; // in seconds
  text: string;
}

export interface SubtitleTrack {
  id?: string; // Caption track ID from API
  langCode: string; // e.g., 'en', 'ja'
  langName: string; // e.g., 'English', 'Japanese'
  isAutoGenerated: boolean;
  lines: SubtitleLine[]; // This will be empty for now with real API for captions list
  kind?: string; // e.g. "asr", "standard" from API
}

export interface CommentReply {
  id: string;
  authorName: string;
  authorThumbnailUrl?: string;
  authorChannelId?: string; // Added
  text: string;
  likeCount: number;
  publishedAt: string; // ISO string
  updatedAt: string; // Added
}

export interface Comment {
  id:string;
  authorName: string;
  authorThumbnailUrl?: string;
  authorChannelId?: string; // Added
  text: string;
  likeCount: number;
  replyCount: number;
  publishedAt: string; // ISO string
  updatedAt: string; // Added
  replies?: CommentReply[];
  canRate?: boolean; // Added
  viewerRating?: string; // Added
}

export interface SearchFilters {
  dateRange?: 'any' | 'today' | 'week' | 'month' | 'year'; // Will be mapped to publishedAfter/Before
  videoLength?: 'any' | 'short' | 'medium' | 'long'; // Mapped to videoDuration
  sortBy?: 'relevance' | 'date' | 'viewCount' | 'rating'; // Mapped to 'order'
}

export interface VideoDetails extends Video {
  subtitles: SubtitleTrack[];
  comments: Comment[];
  tags?: string[];
  categoryId?: string;
  licensedContent?: boolean;
  liveBroadcastContent?: string; // e.g. "none", "live", "upcoming"
  likeCount?: string; // Formatted, from video statistics
}

export interface SearchResult {
  videos: Video[];
  nextPageToken?: string;
  prevPageToken?: string; // YouTube API typically only provides nextPageToken
  totalResults: number;
  resultsPerPage: number;
}